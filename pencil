!/usr/bin/env python3
# This is a curses based text editor that weighs in at less than 2 KB.
import curses, sys, os

filename = sys.argv[1] if len(sys.argv) > 1 else None
if not filename:
    filename = input('filename?')
    os.system(f"touch '{filename}'")

try: lines = open(filename).read().splitlines()
except FileNotFoundError: lines = [""]

def main(stdscr):
    curses.curs_set(1)
    stdscr.keypad(True)
    y, x = 0, 0
    while True:
        stdscr.clear()
        for i, line in enumerate(lines): stdscr.addstr(i, 0, line)
        stdscr.move(y, x)
        stdscr.refresh()
        c = stdscr.get_wch()
        if c == '\x1b': break
        elif c == curses.KEY_UP: y = max(0, y-1); x = min(x, len(lines[y]))
        elif c == curses.KEY_DOWN: y = min(len(lines)-1, y+1); x = min(x, len(lines[y]))
        elif c == curses.KEY_LEFT: x = max(0, x-1)
        elif c == curses.KEY_RIGHT: x = min(len(lines[y]), x+1)
        elif c in ('\b', '\x7f', curses.KEY_BACKSPACE):
            if x > 0: lines[y] = lines[y][:x-1] + lines[y][x:]; x -= 1
            elif x == 0 and y > 0: x = len(lines[y-1]); lines[y-1] += lines[y]; lines.pop(y); y -= 1
        elif c == '\n': lines.insert(y+1, lines[y][x:] if x < len(lines[y]) else ""); lines[y] = lines[y][:x]; y += 1; x = 0
        elif isinstance(c, str): 
            while y >= len(lines): lines.append("")
            lines[y] = lines[y][:x] + c + lines[y][x:]; x += 1

    open(filename, "w").write("\n".join(lines))

curses.wrapper(main)
